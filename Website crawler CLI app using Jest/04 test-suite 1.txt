Objective: use the normalize(URL) and run test

Yes, that's correct! The normalizeURL() function takes in a URL string as input, extracts the hostname and pathname using the built-in URL object in JavaScript, and then returns a normalized string combining the hostname and pathname. The crawl.test.js file tests this function with various input URLs and checks if the normalized output matches the expected output.

a)  normalizeURL() should do?

	//input URL
	//output: a common string


normalizeURL
______________________________________________
function normalizeURL(urlString) {
	const urlObj = new URL(urlString)
	return '${urlObj.hostname}${urlObj.pathname}'			//Template literals in JS: ${}	//thing inside= JS, thing outside= string
}


mpdule.exports = {
	normalizeURL
}

crawl.test.js
______________________________________________
const {normalizeURL} = require('./crawl.js')
const { text, expect } = require('@jest/globals')


'https://boot.dev'
'http://boot.dev'
'https://Boot.dev'



test ('normalizeURL', () => {
	const input = 'https://blog.boot.dev/path' --->normalizeURL() will strip it down to blog.boot.dev/path
													--hostname--  --pathname
	const actual = normalizeURL(input)
	const expected = 'blog.boot.dev/path'
	expect(actual).toEqual(expected)			//test function checking if it is equal to   'blog.boot.dev/path'
}) 


//								//returning true
> npm test


success